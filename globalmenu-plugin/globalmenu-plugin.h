/* globalmenu-plugin.h generated by valac, the Vala compiler, do not modify */


#ifndef __GLOBALMENU_PLUGIN_H__
#define __GLOBALMENU_PLUGIN_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <gmodule.h>
#include <glib-object.h>
#include <gtk/gtk.h>

G_BEGIN_DECLS


#define TYPE_SERIALIZER (serializer_get_type ())
#define SERIALIZER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), TYPE_SERIALIZER, Serializer))
#define SERIALIZER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), TYPE_SERIALIZER, SerializerClass))
#define IS_SERIALIZER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), TYPE_SERIALIZER))
#define IS_SERIALIZER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), TYPE_SERIALIZER))
#define SERIALIZER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), TYPE_SERIALIZER, SerializerClass))

typedef struct _Serializer Serializer;
typedef struct _SerializerClass SerializerClass;
typedef struct _SerializerPrivate SerializerPrivate;
typedef struct _Locator Locator;

struct _Serializer {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SerializerPrivate * priv;
	gboolean disable_pixbuf;
	gboolean pretty_print;
};

struct _SerializerClass {
	GTypeClass parent_class;
	void (*finalize) (Serializer *self);
};

struct _Locator {
	int dummy;
};


void superrider_superride (GType type, gint offset, void* vfunc);
void* superrider_peek_super (GType type, gint offset);
void* superrider_peek_base (GType type, gint offset);
void superrider_release_all (void);
void gtk_module_init (int* args_length1, char*** args);
char* g_module_check_init (GModule* module);
gpointer serializer_ref (gpointer instance);
void serializer_unref (gpointer instance);
GParamSpec* param_spec_serializer (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void value_set_serializer (GValue* value, gpointer v_object);
void value_take_serializer (GValue* value, gpointer v_object);
gpointer value_get_serializer (const GValue* value);
GType serializer_get_type (void) G_GNUC_CONST;
Serializer* serializer_new (void);
Serializer* serializer_construct (GType object_type);
char* serializer_to_string (Serializer* self, GtkMenuBar* menubar);
void locator_free (Locator* self);
GtkMenuItem* locator_locate (GtkMenuBar* menubar, const char* path);


G_END_DECLS

#endif
